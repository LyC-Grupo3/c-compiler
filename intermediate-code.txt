=== CÓDIGO INTERMEDIO - NOTACIÓN POLACA INVERSA ===

[  0] 1
[  1] varInt1
[  2] :=
[  3] 1
[  4] varInt1
[  5] :=
[  6] 2
[  7] varInt2
[  8] :=
[  9] 99999.99
[ 10] varFloat1
[ 11] :=
[ 12] 99999.99
[ 13] varFloat1
[ 14] :=
[ 15] 99.
[ 16] varFloat2
[ 17] :=
[ 18] 99.0000
[ 19] varFloat2
[ 20] :=
[ 21] .9999
[ 22] varFloat3
[ 23] :=
[ 24] "string repetido"
[ 25] varString1
[ 26] :=
[ 27] "string repetido"
[ 28] varString1
[ 29] :=
[ 30] "string diferente"
[ 31] varString2
[ 32] :=
[ 33] 27
[ 34] varInt2
[ 35] -
[ 36] varInt1
[ 37] :=
[ 38] varInt1
[ 39] 500
[ 40] +
[ 41] varInt2
[ 42] :=
[ 43] varFloat2
[ 44] 4.0
[ 45] /
[ 46] varFloat1
[ 47] :=
[ 48] 34.4
[ 49] 3.1
[ 50] *
[ 51] varFloat2
[ 52] :=
[ 53] a
[ 54] b
[ 55] CMP
[ 56] BLE
[ 57] 60
[ 58] "verdad IF simple"
[ 59] WRITE
[ 60] a
[ 61] b
[ 62] CMP
[ 63] BLE
[ 64] 69
[ 65] "verdad IF-ELSE simple"
[ 66] WRITE
[ 67] BI
[ 68] 71
[ 69] "falso IF-ELSE simple"
[ 70] WRITE
[ 71] a
[ 72] b
[ 73] CMP
[ 74] BLE
[ 75] 83
[ 76] c
[ 77] b
[ 78] CMP
[ 79] BLE
[ 80] 83
[ 81] "verdad IF AND"
[ 82] WRITE
[ 83] a
[ 84] b
[ 85] CMP
[ 86] BLE
[ 87] 97
[ 88] c
[ 89] b
[ 90] CMP
[ 91] BLE
[ 92] 97
[ 93] "verdad IF-ELSE AND"
[ 94] WRITE
[ 95] BI
[ 96] 99
[ 97] "falso IF-ELSE AND"
[ 98] WRITE
[ 99] a
[100] b
[101] CMP
[102] BLE
[103] 106
[104] BI
[105] 111
[106] c
[107] b
[108] CMP
[109] BLE
[110] 113
[111] "verdad OR"
[112] WRITE
[113] a
[114] b
[115] CMP
[116] BLE
[117] 120
[118] BI
[119] 125
[120] c
[121] b
[122] CMP
[123] BLE
[124] 129
[125] "verdad IF-ELSE OR"
[126] WRITE
[127] BI
[128] 131
[129] "falso IF-ELSE OR"
[130] WRITE
[131] ET
[132] a
[133] b
[134] CMP
[135] BLE
[136] 141
[137] "dentro WHILE simple"
[138] WRITE
[139] BI
[140] 131
[141] ET
[142] a
[143] b
[144] CMP
[145] BLE
[146] 156
[147] c
[148] d
[149] CMP
[150] BLE
[151] 156
[152] "dentro WHILE compuesto AND"
[153] WRITE
[154] BI
[155] 141
[156] ET
[157] a
[158] b
[159] CMP
[160] BLE
[161] 164
[162] BI
[163] 169
[164] c
[165] d
[166] CMP
[167] BLE
[168] 173
[169] "dentro WHILE compuesto OR"
[170] WRITE
[171] BI
[172] 156
[173] a
[174] b
[175] CMP
[176] BGT
[177] 180
[178] "negado SIMPLE"
[179] WRITE
[180] ET
[181] a
[182] b
[183] CMP
[184] BGT
[185] 190
[186] "dentro WHILE compuesto NOT"
[187] WRITE
[188] BI
[189] 180
[190] a
[191] b
[192] CMP
[193] BLE
[194] 214
[195] "true a>b"
[196] WRITE
[197] c
[198] d
[199] CMP
[200] BLE
[201] 204
[202] "true anidado"
[203] WRITE
[204] ET
[205] e
[206] f
[207] CMP
[208] BGE
[209] 214
[210] "dentro WHILE anidado"
[211] WRITE
[212] BI
[213] 204
[214] varInt1
[215] READ
[216] "cadena"
[217] WRITE
[218] varInt1
[219] WRITE
[220] a
[221] @expActual
[222] :=
[223] b
[224] @expAux
[225] :=
[226] @expActual
[227] @expAux
[228] CMP
[229] BEQ
[230] 317
[231] c
[232] @expAux
[233] :=
[234] @expActual
[235] @expAux
[236] CMP
[237] BEQ
[238] 317
[239] d
[240] @expAux
[241] :=
[242] @expActual
[243] @expAux
[244] CMP
[245] BEQ
[246] 317
[247] e
[248] @expAux
[249] :=
[250] @expActual
[251] @expAux
[252] CMP
[253] BEQ
[254] 317
[255] b
[256] @expActual
[257] :=
[258] c
[259] @expAux
[260] :=
[261] @expActual
[262] @expAux
[263] CMP
[264] BEQ
[265] 317
[266] d
[267] @expAux
[268] :=
[269] @expActual
[270] @expAux
[271] CMP
[272] BEQ
[273] 317
[274] e
[275] @expAux
[276] :=
[277] @expActual
[278] @expAux
[279] CMP
[280] BEQ
[281] 317
[282] c
[283] @expActual
[284] :=
[285] d
[286] @expAux
[287] :=
[288] @expActual
[289] @expAux
[290] CMP
[291] BEQ
[292] 317
[293] e
[294] @expAux
[295] :=
[296] @expActual
[297] @expAux
[298] CMP
[299] BEQ
[300] 317
[301] d
[302] @expActual
[303] :=
[304] e
[305] @expAux
[306] :=
[307] @expActual
[308] @expAux
[309] CMP
[310] BEQ
[311] 317
[312] 0
[313] @equal
[314] :=
[315] BI
[316] 320
[317] 1
[318] @equal
[319] :=
[320] @equal
[321] resultEqualExpressions
[322] :=
[323] y2
[324] y3
[325] -
[326] x1
[327] *
[328] y3
[329] y1
[330] -
[331] x2
[332] *
[333] +
[334] y1
[335] y2
[336] -
[337] x3
[338] *
[339] +
[340] ABS
[341] 2
[342] /
[343] @area_t1
[344] :=
[345] b2
[346] b3
[347] -
[348] a1
[349] *
[350] b3
[351] b1
[352] -
[353] a2
[354] *
[355] +
[356] b1
[357] b2
[358] -
[359] a3
[360] *
[361] +
[362] ABS
[363] 2
[364] /
[365] @area_t2
[366] :=
[367] @area_t1
[368] @area_t2
[369] CMP
[370] BLE
[371] 377
[372] @area_t1
[373] @result_max
[374] :=
[375] BI
[376] 380
[377] @area_t2
[378] @result_max
[379] :=
[380] @result_max
[381] resultAreamax
[382] :=
